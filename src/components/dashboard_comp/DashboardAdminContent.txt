
import React from "react";

const Dashboard = () => {
  const [isSidebarOpen, setIsSidebarOpen] = React.useState(true);

  React.useEffect(() => {
    const sidebar = document.getElementById("sidebar");
    const menuTexts = document.querySelectorAll(".menu-text");
    const logo = document.querySelector(".logo");
    const logoText = document.querySelector(".logo-text");

    if (isSidebarOpen) {
      sidebar.style.width = "256px";
      menuTexts.forEach((text) => (text.style.display = "inline"));
      logo.style.display = "block";
      logoText.style.display = "block";
    } else {
      sidebar.style.width = "80px";
      sidebar.style.transition = "width 0.3s ease-in-out";
      sidebar.style.paddingTop = "60px";
      sidebar.style.paddingRight = "60px";
      menuTexts.forEach((text) => (text.style.display = "none"));
      logo.style.display = "none";
      logoText.style.display = "none";
    }
  }, [isSidebarOpen]);

  const toggleSidebar = () => {
    setIsSidebarOpen(!isSidebarOpen);
  };

  return (
    <div className="flex h-screen bg-gray-100">
      {/* Sidebar */}
      <aside
        id="sidebar"
        className="sidebar fixed top-0 left-0 h-full bg-gray-800 text-white transition-all duration-300"
      >
        <div className="p-6">
          <img
            src="https://placekitten.com/100/100"
            alt="UniverDog Logo"
            className="w-20 h-20 mx-auto rounded-full mb-4 logo"
          />
          <h2 className="text-2xl font-bold text-white text-center mb-6 logo-text">
            UniverDog
          </h2>
          <nav className="space-y-4">
            <a
              href="#dashboard"
              className="flex items-center py-2 px-2 text-white hover:bg-gray-700 hover:pr-6 rounded transition duration-200"
            >
              <i className="fas fa-tachometer-alt mr-2 "></i>
              <span className="menu-text">Dashboard</span>
            </a>
            <a
              href="#places"
              className="flex items-center py-2 px-2 text-white hover:bg-gray-700 hover:pr-6 rounded transition duration-200"
            >
              <i className="fas fa-map-marker-alt mr-2"></i>
              <span className="menu-text">Places</span>
            </a>
            <a
              href="#users"
              className="flex items-center py-2 px-2 text-white hover:bg-gray-700 hover:pr-6 rounded transition duration-200"
            >
              <i className="fas fa-users mr-2"></i>
              <span className="menu-text">Users</span>
            </a>
            <a
              href="#events"
              className="flex items-center py-2 px-2 text-white hover:bg-gray-700 hover:pr-6 rounded transition duration-200"
            >
              <i className="fas fa-calendar-alt mr-2"></i>
              <span className="menu-text">Events</span>
            </a>
            <a
              href="#reports"
              className="flex items-center py-2 px-2 text-white hover:bg-gray-700 hover:pr-6 rounded transition duration-200"
            >
              <i className="fas fa-flag mr-2"></i>
              <span className="menu-text">Reports</span>
            </a>
            <a
              href="#settings"
              className="flex items-center py-2 px-2 text-white hover:bg-gray-700 hover:pr-6 rounded transition duration-200"
            >
              <i className="fas fa-cog mr-2"></i>
              <span className="menu-text">Settings</span>
            </a>
          </nav>
        </div>
      </aside>

      {/* Main Content */}
      <div
        className={`flex-1 flex flex-col overflow-hidden ${
          isSidebarOpen ? "ml-64" : "ml-16"
        }`}
      >
        {/* Header */}

        {/* Sidebar Toggle Button */}
        <button
          onClick={toggleSidebar}
          id="sidebarToggle"
          className="sidebar-toggle bg-gray-800 text-white p-2 rounded-full focus:outline-none absolute top-4 left-4 z-50"
        >
          <i className="fas fa-bars"></i>
        </button>
        <header className="bg-white shadow-sm">
          <div className="max-w-7xl mx-auto py-4 px-4 sm:px-6 lg:px-8 flex justify-between items-center">
            <h1 className="text-2xl font-semibold text-gray-900">Dashboard</h1>
            <div className="flex items-center">
              <button className="text-gray-500 hover:text-gray-700 focus:outline-none focus:ring">
                <i className="fas fa-bell text-xl"></i>
              </button>
              <button className="ml-4 text-gray-500 hover:text-gray-700 focus:outline-none focus:ring">
                <i className="fas fa-user-circle text-2xl"></i>
              </button>
            </div>
          </div>
        </header>

        {/* Main Dashboard Content */}
        <main className="flex-1 overflow-x-hidden overflow-y-auto bg-gray-100 p-6">
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-6">
            {[
              {
                icon: "M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z",
                title: "Total Places",
                value: "248",
                color: "blue",
              },
              {
                icon: "M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z",
                title: "Total Users",
                value: "12,361",
                color: "green",
              },
              {
                icon: "M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4",
                title: "Events This Month",
                value: "42",
                color: "yellow",
              },
              {
                icon: "M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9",
                title: "Active Reports",
                value: "7",
                color: "red",
              },
            ].map((item, index) => (
              <div key={index} className="card p-6">
                <div className="flex items-center">
                  <div
                    className={`p-3 rounded-full bg-${item.color}-500 text-white mr-4`}
                  >
                    <svg
                      className="w-6 h-6"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={2}
                        d={item.icon}
                      />
                    </svg>
                  </div>
                  <div>
                    <p className="mb-2 text-sm font-medium text-gray-600">
                      {item.title}
                    </p>
                    <p className="text-lg font-semibold text-gray-700">
                      {item.value}
                    </p>
                  </div>
                </div>
              </div>
            ))}
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <div className="card p-6">
              <h2 className="text-lg font-semibold mb-4">Recent Activities</h2>
              <ul className="space-y-4">
                {[
                  { color: "blue", text: 'New place added: "Doggy Daycare"' },
                  {
                    color: "green",
                    text: 'User "JohnDoe" updated their profile',
                  },
                  {
                    color: "yellow",
                    text: 'New event created: "Puppy Playtime"',
                  },
                  {
                    color: "red",
                    text: 'Report resolved: "Inappropriate content"',
                  },
                ].map((item, index) => (
                  <li key={index} className="flex items-center">
                    <span
                      className={`w-2 h-2 bg-${item.color}-500 rounded-full mr-2`}
                    ></span>
                    <span className="text-sm text-gray-600">{item.text}</span>
                  </li>
                ))}
              </ul>
            </div>
            <div className="card p-6">
              <h2 className="text-lg font-semibold mb-4">Quick Actions</h2>
              <div className="grid grid-cols-2 gap-4">
                {["Places", "Users", "Categories", "Events"].map((item) => (
                  <button
                    key={item}
                    className="btn btn-primary btn-outline"
                    onClick={() => {}}
                  >
                    Manage {item}
                  </button>
                ))}
              </div>
            </div>
          </div>
        </main>
      </div>
    </div>
  );
};

export default Dashboard;
